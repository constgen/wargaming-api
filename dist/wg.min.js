!function(e){function r(e,r,o){return 4===arguments.length?t.apply(this,arguments):void n(e,{declarative:!0,deps:r,declare:o})}function t(e,r,t,o){n(e,{declarative:!1,deps:r,executingRequire:t,execute:o})}function n(e,r){r.name=e,e in v||(v[e]=r),r.normalizedDeps=r.deps}function o(e,r){if(r[e.groupIndex]=r[e.groupIndex]||[],-1==g.call(r[e.groupIndex],e)){r[e.groupIndex].push(e);for(var t=0,n=e.normalizedDeps.length;n>t;t++){var a=e.normalizedDeps[t],u=v[a];if(u&&!u.evaluated){var d=e.groupIndex+(u.declarative!=e.declarative);if(void 0===u.groupIndex||u.groupIndex<d){if(void 0!==u.groupIndex&&(r[u.groupIndex].splice(g.call(r[u.groupIndex],u),1),0==r[u.groupIndex].length))throw new TypeError("Mixed dependency cycle detected");u.groupIndex=d}o(u,r)}}}}function a(e){var r=v[e];r.groupIndex=0;var t=[];o(r,t);for(var n=!!r.declarative==t.length%2,a=t.length-1;a>=0;a--){for(var u=t[a],i=0;i<u.length;i++){var s=u[i];n?d(s):l(s)}n=!n}}function u(e){return y[e]||(y[e]={name:e,dependencies:[],exports:{},importers:[]})}function d(r){if(!r.module){var t=r.module=u(r.name),n=r.module.exports,o=r.declare.call(e,function(e,r){if(t.locked=!0,"object"==typeof e)for(var o in e)n[o]=e[o];else n[e]=r;for(var a=0,u=t.importers.length;u>a;a++){var d=t.importers[a];if(!d.locked)for(var i=0;i<d.dependencies.length;++i)d.dependencies[i]===t&&d.setters[i](n)}return t.locked=!1,r},{id:r.name});t.setters=o.setters,t.execute=o.execute;for(var a=0,i=r.normalizedDeps.length;i>a;a++){var l,s=r.normalizedDeps[a],c=v[s],f=y[s];f?l=f.exports:c&&!c.declarative?l=c.esModule:c?(d(c),f=c.module,l=f.exports):l=p(s),f&&f.importers?(f.importers.push(t),t.dependencies.push(f)):t.dependencies.push(null),t.setters[a]&&t.setters[a](l)}}}function i(e){var r,t=v[e];if(t)t.declarative?f(e,[]):t.evaluated||l(t),r=t.module.exports;else if(r=p(e),!r)throw new Error("Unable to load dependency "+e+".");return(!t||t.declarative)&&r&&r.__useDefault?r.default:r}function l(r){if(!r.module){var t={},n=r.module={exports:t,id:r.name};if(!r.executingRequire)for(var o=0,a=r.normalizedDeps.length;a>o;o++){var u=r.normalizedDeps[o],d=v[u];d&&l(d)}r.evaluated=!0;var c=r.execute.call(e,function(e){for(var t=0,n=r.deps.length;n>t;t++)if(r.deps[t]==e)return i(r.normalizedDeps[t]);throw new TypeError("Module "+e+" not declared as a dependency.")},t,n);void 0!==typeof c&&(n.exports=c),t=n.exports,t&&t.__esModule?r.esModule=t:r.esModule=s(t)}}function s(r){var t={};if(("object"==typeof r||"function"==typeof r)&&r!==e)if(m)for(var n in r)"default"!==n&&c(t,r,n);else{var o=r&&r.hasOwnProperty;for(var n in r)"default"===n||o&&!r.hasOwnProperty(n)||(t[n]=r[n])}return t.default=r,x(t,"__useDefault",{value:!0}),t}function c(e,r,t){try{var n;(n=Object.getOwnPropertyDescriptor(r,t))&&x(e,t,n)}catch(o){return e[t]=r[t],!1}}function f(r,t){var n=v[r];if(n&&!n.evaluated&&n.declarative){t.push(r);for(var o=0,a=n.normalizedDeps.length;a>o;o++){var u=n.normalizedDeps[o];-1==g.call(t,u)&&(v[u]?f(u,t):p(u))}n.evaluated||(n.evaluated=!0,n.module.execute.call(e))}}function p(e){if(I[e])return I[e];if("@node/"==e.substr(0,6))return I[e]=s(D(e.substr(6)));var r=v[e];if(!r)throw"Module "+e+" not present.";return a(e),f(e,[]),v[e]=void 0,r.declarative&&x(r.module.exports,"__esModule",{value:!0}),I[e]=r.declarative?r.module.exports:r.esModule}var v={},g=Array.prototype.indexOf||function(e){for(var r=0,t=this.length;t>r;r++)if(this[r]===e)return r;return-1},m=!0;try{Object.getOwnPropertyDescriptor({a:0},"a")}catch(h){m=!1}var x;!function(){try{Object.defineProperty({},"a",{})&&(x=Object.defineProperty)}catch(e){x=function(e,r,t){try{e[r]=t.value||t.get.call(e)}catch(n){}}}}();var y={},D="undefined"!=typeof System&&System._nodeRequire||"undefined"!=typeof require&&require.resolve&&"undefined"!=typeof process&&require,I={"@empty":{}};return function(e,n,o,a){return function(u){u(function(u){for(var d={_nodeRequire:D,register:r,registerDynamic:t,get:p,set:function(e,r){I[e]=r},newModule:function(e){return e}},i=0;i<n.length;i++)(function(e,r){r&&r.__esModule?I[e]=r:I[e]=s(r)})(n[i],arguments[i]);a(d);var l=p(e[0]);if(e.length>1)for(var i=1;i<e.length;i++)p(e[i]);return o?l.default:l})}}}("undefined"!=typeof self?self:global)(["1"],[],!0,function($__System){this.require,this.exports,this.module;$__System.registerDynamic("2",["3","4","5"],!0,function($__require,exports,module){"use strict";function WorldOfTanks(realm){var realmUrl=WorldOfTanks.realms[realm],apiUrl=protocol+"//"+realmUrl+"/wot";if(!realmUrl)throw new ReferenceError('Requested realm "'+realm+'" is not supported for this API');Object.assign(this,{account:{players:new Endpoint({url:apiUrl+"/account/list"}),player:new Endpoint({url:apiUrl+"/account/info"}),achievements:new Endpoint({url:apiUrl+"/account/achievements"}),stats:new Endpoint({url:apiUrl+"/account/statsbydate"})},auth:{login:new Endpoint({url:apiUrl+"/auth/login"}),logout:new Endpoint({url:apiUrl+"/auth/logout"}),prolongate:new Endpoint({url:apiUrl+"/auth/prolongate"})},stronghold:{info:new Endpoint({url:apiUrl+"/stronghold/info"}),buildings:new Endpoint({url:apiUrl+"/stronghold/buildings"}),playerStats:new Endpoint({url:apiUrl+"/stronghold/accountstats"}),battles:new Endpoint({url:apiUrl+"/stronghold/plannedbattles"})},globalmap:{fronts:new Endpoint({url:apiUrl+"/globalmap/fronts"}),provinces:new Endpoint({url:apiUrl+"/globalmap/provinces"}),info:new Endpoint({url:apiUrl+"/globalmap/info"})},event:{list:new Endpoint({url:apiUrl+"/globalmap/events"}),clanInfo:new Endpoint({url:apiUrl+"/globalmap/eventclaninfo"}),playerInfo:new Endpoint({url:apiUrl+"/globalmap/eventaccountinfo"}),playerRating:new Endpoint({url:apiUrl+"/globalmap/eventaccountratings"}),playerNeighborsRating:new Endpoint({url:apiUrl+"/globalmap/eventaccountratingneighbors"}),clanRating:new Endpoint({url:apiUrl+"/globalmap/eventrating"}),clanNeighborsRating:new Endpoint({url:apiUrl+"/globalmap/eventratingneighbors"})},clan:{info:new Endpoint({url:apiUrl+"/globalmap/claninfo"}),rovinces:new Endpoint({url:apiUrl+"/globalmap/clanprovinces"}),battles:new Endpoint({url:apiUrl+"/globalmap/clanbattles"})},season:{list:new Endpoint({url:apiUrl+"/globalmap/seasons"}),clanInfo:new Endpoint({url:apiUrl+"/globalmap/seasonclaninfo"}),playerInfo:new Endpoint({url:apiUrl+"/globalmap/seasonaccountinfo"}),clanRating:new Endpoint({url:apiUrl+"/globalmap/seasonrating"}),clanNeighborsRating:new Endpoint({url:apiUrl+"/globalmap/seasonratingneighbors"})},encyclopedia:{tanks:new Endpoint({deprecated:!0,url:apiUrl+"/encyclopedia/tanks"}),tankInfo:new Endpoint({deprecated:!0,url:apiUrl+"/encyclopedia/tankinfo"}),vehicles:new Endpoint({url:apiUrl+"/encyclopedia/vehicles"}),vehicleProfile:new Endpoint({url:apiUrl+"/encyclopedia/vehicleprofile"}),tankEngines:new Endpoint({deprecated:!0,url:apiUrl+"/encyclopedia/tankengines"}),tankTurrets:new Endpoint({deprecated:!0,url:apiUrl+"/encyclopedia/tankturrets"}),tankRadios:new Endpoint({deprecated:!0,url:apiUrl+"/encyclopedia/tankradios"}),tankChassis:new Endpoint({deprecated:!0,url:apiUrl+"/encyclopedia/tankchassis"}),tankWeapons:new Endpoint({deprecated:!0,url:apiUrl+"/encyclopedia/tankguns"}),achievements:new Endpoint({url:apiUrl+"/encyclopedia/achievements"}),info:new Endpoint({url:apiUrl+"/encyclopedia/info"}),arenas:new Endpoint({url:apiUrl+"/encyclopedia/arenas"}),provisions:new Endpoint({url:apiUrl+"/encyclopedia/provisions"}),personalMissions:new Endpoint({url:apiUrl+"/encyclopedia/personalmissions"}),boosters:new Endpoint({url:apiUrl+"/encyclopedia/boosters"}),tankUpgrades:new Endpoint({url:apiUrl+"/encyclopedia/vehicleprofiles"}),modules:new Endpoint({url:apiUrl+"/encyclopedia/modules"})},rating:{types:new Endpoint({url:apiUrl+"/ratings/types"}),dates:new Endpoint({url:apiUrl+"/ratings/dates"}),player:new Endpoint({url:apiUrl+"/ratings/accounts"}),neighbors:new Endpoint({url:apiUrl+"/ratings/neighbors"}),top:new Endpoint({url:apiUrl+"/ratings/top"})},clanRating:{types:new Endpoint({url:apiUrl+"/clanratings/types"}),dates:new Endpoint({url:apiUrl+"/clanratings/dates"}),clan:new Endpoint({url:apiUrl+"/clanratings/clans"}),neighbors:new Endpoint({url:apiUrl+"/clanratings/neighbors"}),top:new Endpoint({url:apiUrl+"/clanratings/top"})},tanks:{stats:new Endpoint({url:apiUrl+"/tanks/stats"}),achievements:new Endpoint({url:apiUrl+"/tanks/achievements"})},teams:{list:new Endpoint({url:apiUrl+"/regularteams/list"}),info:new Endpoint({url:apiUrl+"/regularteams/info"}),memberInfo:new Endpoint({url:apiUrl+"/regularteams/memberinfo"})}})}var protocol=(this||self,$__require("3"),$__require("4")),Endpoint=$__require("5");return WorldOfTanks.realms={ru:"api.worldoftanks.ru",eu:"api.worldoftanks.eu",na:"api.worldoftanks.com",kr:"api.worldoftanks.kr",asia:"api.worldoftanks.asia"},module.exports=WorldOfTanks,module.exports}),$__System.registerDynamic("6",["3","4","5"],!0,function($__require,exports,module){"use strict";function WorldOfTanksBlitz(realm){var realmUrl=WorldOfTanksBlitz.realms[realm],apiUrl=protocol+"//"+realmUrl+"/wotb";if(!realmUrl)throw new ReferenceError('Requested realm "'+realm+'" is not supported for this API');Object.assign(this,{account:{players:new Endpoint({url:apiUrl+"/account/list"}),player:new Endpoint({url:apiUrl+"/account/info"}),achievements:new Endpoint({url:apiUrl+"/account/achievements"}),stats:new Endpoint({url:apiUrl+"/account/tankstats"})},encyclopedia:{vehicles:new Endpoint({url:apiUrl+"/encyclopedia/vehicles"}),tankCharacteristics:new Endpoint({url:apiUrl+"/encyclopedia/vehicleprofile"}),modules:new Endpoint({url:apiUrl+"/encyclopedia/vehiclepackages"}),provisions:new Endpoint({url:apiUrl+"/encyclopedia/provisions"}),info:new Endpoint({url:apiUrl+"/encyclopedia/info"}),achievements:new Endpoint({url:apiUrl+"/encyclopedia/achievements"}),crew:new Endpoint({url:apiUrl+"/encyclopedia/crewroles"}),tankUpgrades:new Endpoint({url:apiUrl+"/encyclopedia/vehicleprofiles"})},clan:{list:new Endpoint({url:apiUrl+"/clans/list"}),info:new Endpoint({url:apiUrl+"/clans/info"}),playerInfo:new Endpoint({url:apiUrl+"/clans/accountinfo"}),glossary:new Endpoint({url:apiUrl+"/clans/glossary"})},tanks:{stats:new Endpoint({url:apiUrl+"/tanks/stats"}),achievements:new Endpoint({url:apiUrl+"/tanks/achievements"})},message:{list:new Endpoint({url:apiUrl+"/clanmessages/messages"}),create:new Endpoint({url:apiUrl+"/clanmessages/create"}),delete:new Endpoint({url:apiUrl+"/clanmessages/delete"}),toggleLike:new Endpoint({url:apiUrl+"/clanmessages/like"}),likes:new Endpoint({url:apiUrl+"/clanmessages/likes"}),update:new Endpoint({url:apiUrl+"/clanmessages/update"})},tournament:{list:new Endpoint({url:apiUrl+"/tournaments/list"}),info:new Endpoint({url:apiUrl+"/tournaments/info"}),teams:new Endpoint({url:apiUrl+"/tournaments/teams"}),stages:new Endpoint({url:apiUrl+"/tournaments/stages"}),matches:new Endpoint({url:apiUrl+"/tournaments/matches"})}})}var protocol=(this||self,$__require("3"),$__require("4")),Endpoint=$__require("5");return WorldOfTanksBlitz.realms={ru:"api.wotblitz.ru",eu:"api.wotblitz.eu",na:"api.wotblitz.com",asia:"api.wotblitz.asia"},module.exports=WorldOfTanksBlitz,module.exports}),$__System.registerDynamic("7",["3","4","5"],!0,function($__require,exports,module){"use strict";function WorldOfTanksConsole(realm){var realmUrl=WorldOfTanksConsole.realms[realm],apiUrl=protocol+"//"+realmUrl+"/wotx";if(!realmUrl)throw new ReferenceError('Requested realm "'+realm+'" is not supported for this API');Object.assign(this,{account:{players:new Endpoint({url:apiUrl+"/account/list"}),player:new Endpoint({url:apiUrl+"/account/info"}),achievements:new Endpoint({url:apiUrl+"/account/achievements"}),psninfo:new Endpoint({url:apiUrl+"/account/psninfo"}),xuidinfo:new Endpoint({url:apiUrl+"/account/xuidinfo"})},auth:{login:new Endpoint({url:apiUrl+"/auth/login"}),logout:new Endpoint({url:apiUrl+"/auth/logout"}),prolongate:new Endpoint({url:apiUrl+"/auth/prolongate"})},clan:{list:new Endpoint({url:apiUrl+"/clans/list"}),info:new Endpoint({url:apiUrl+"/clans/info"}),playerInfo:new Endpoint({url:apiUrl+"/clans/accountinfo"}),glossary:new Endpoint({url:apiUrl+"/clans/glossary"})},encyclopedia:{crew:new Endpoint({deprecated:!0,url:apiUrl+"/encyclopedia/crewroles"}),vehicles:new Endpoint({url:apiUrl+"/encyclopedia/vehicles"}),modules:new Endpoint({url:apiUrl+"/encyclopedia/vehiclepackages"}),tankUpgrades:new Endpoint({url:apiUrl+"/encyclopedia/vehicleupgrades"}),achievements:new Endpoint({url:apiUrl+"/encyclopedia/achievements"}),info:new Endpoint({url:apiUrl+"/encyclopedia/info"})},rating:{types:new Endpoint({url:apiUrl+"/ratings/types"}),dates:new Endpoint({url:apiUrl+"/ratings/dates"}),player:new Endpoint({url:apiUrl+"/ratings/accounts"}),neighbors:new Endpoint({url:apiUrl+"/ratings/neighbors"}),top:new Endpoint({url:apiUrl+"/ratings/top"})},tanks:{stats:new Endpoint({url:apiUrl+"/tanks/stats"}),achievements:new Endpoint({url:apiUrl+"/tanks/achievements"})}})}var protocol=(this||self,$__require("3"),$__require("4")),Endpoint=$__require("5");return WorldOfTanksConsole.realms={xbox:"api-xbox-console.worldoftanks.com",ps4:"api-ps4-console.worldoftanks.com"},module.exports=WorldOfTanksConsole,module.exports}),$__System.registerDynamic("8",["3","4","5"],!0,function($__require,exports,module){"use strict";function WorldOfWarships(realm){var realmUrl=WorldOfWarships.realms[realm],apiUrl=protocol+"//"+realmUrl+"/wows";if(!realmUrl)throw new ReferenceError('Requested realm "'+realm+'" is not supported for this API');Object.assign(this,{account:{players:new Endpoint({url:apiUrl+"/account/list"}),player:new Endpoint({url:apiUrl+"/account/info"}),achievements:new Endpoint({url:apiUrl+"/account/achievements"}),stats:new Endpoint({url:apiUrl+"/account/statsbydate"})},ships:{stats:new Endpoint({url:apiUrl+"/ships/stats"})},encyclopedia:{ships:new Endpoint({url:apiUrl+"/encyclopedia/ships"}),shipInfo:new Endpoint({url:apiUrl+"/encyclopedia/shipprofile"}),shipModules:new Endpoint({url:apiUrl+"/encyclopedia/modules"}),exterior:new Endpoint({url:apiUrl+"/encyclopedia/exterior"}),shipUpgrades:new Endpoint({url:apiUrl+"/encyclopedia/upgrades"}),accountLevels:new Endpoint({url:apiUrl+"/encyclopedia/accountlevels"}),commanders:new Endpoint({url:apiUrl+"/encyclopedia/crews"}),commanderSkills:new Endpoint({url:apiUrl+"/encyclopedia/crewskills"}),commanderRanks:new Endpoint({url:apiUrl+"/encyclopedia/crewranks"}),battleTypes:new Endpoint({url:apiUrl+"/encyclopedia/battletypes"}),achievements:new Endpoint({url:apiUrl+"/encyclopedia/achievements"}),info:new Endpoint({url:apiUrl+"/encyclopedia/info"})},season:{list:new Endpoint({url:apiUrl+"/seasons/info"}),shipStats:new Endpoint({url:apiUrl+"/seasons/shipstats"}),playerStats:new Endpoint({url:apiUrl+"/seasons/accountinfo"})}})}var protocol=(this||self,$__require("3"),$__require("4")),Endpoint=$__require("5");return WorldOfWarships.realms={ru:"api.worldofwarships.ru",eu:"api.worldofwarships.eu",na:"api.worldofwarships.com",asia:"api.worldofwarships.asia"},module.exports=WorldOfWarships,module.exports}),$__System.registerDynamic("9",["3","4","5"],!0,function($__require,exports,module){"use strict";function WorldOfWarplanes(realm){var realmUrl=WorldOfWarplanes.realms[realm],apiUrl=protocol+"//"+realmUrl+"/wowp";if(!realmUrl)throw new ReferenceError('Requested realm "'+realm+'" is not supported for this API');Object.assign(this,{account:{players:new Endpoint({url:apiUrl+"/account/list"}),player:new Endpoint({url:apiUrl+"/account/info"}),planes:new Endpoint({url:apiUrl+"/account/planes"})},encyclopedia:{planes:new Endpoint({url:apiUrl+"/encyclopedia/planes"}),planeInfo:new Endpoint({url:apiUrl+"/encyclopedia/planeinfo"}),planeModules:new Endpoint({url:apiUrl+"/encyclopedia/planemodules"}),planeUpgrades:new Endpoint({url:apiUrl+"/encyclopedia/planeupgrades"}),planeSpecification:new Endpoint({url:apiUrl+"/encyclopedia/planespecification"}),achievements:new Endpoint({url:apiUrl+"/encyclopedia/achievements"}),info:new Endpoint({url:apiUrl+"/encyclopedia/info"})},rating:{types:new Endpoint({url:apiUrl+"/ratings/types"}),player:new Endpoint({url:apiUrl+"/ratings/accounts"}),neighbors:new Endpoint({url:apiUrl+"/ratings/neighbors"}),top:new Endpoint({url:apiUrl+"/ratings/top"}),dates:new Endpoint({url:apiUrl+"/ratings/dates"})}})}var protocol=(this||self,$__require("3"),$__require("4")),Endpoint=$__require("5");return WorldOfWarplanes.realms={ru:"api.worldofwarplanes.ru",eu:"api.worldofwarplanes.eu",na:"api.worldofwarplanes.com"},module.exports=WorldOfWarplanes,module.exports}),$__System.registerDynamic("4",["3"],!0,function($__require,exports,module){"use strict";var config=(this||self,$__require("3"));return module.exports=config.requestProtocol?config.requestProtocol+":":"http:",module.exports}),$__System.registerDynamic("a",[],!0,function($__require,exports,module){"use strict";this||self;return module.exports={format:function(location){var href="",search="",query=location.query;return"object"==typeof query&&(search=function(){for(var param,params=Object.keys(query),i=-1,search=[];++i in params;)param=params[i],search.push(param+"="+query[param]);return search.length?"?"+encodeURI(search.join("&")):""}()),href+search}},module.exports}),$__System.registerDynamic("b",["a"],!0,function($__require,exports,module){"use strict";function httpRequest(options,resolve,reject){var payload,xhr=new XMLHttpRequest,requestUrl=options.url,method=options.method,data=options.params,ETag=options.ETag;switch(!0){case!data:payload=null;break;case"POST"===method:payload=url.format({query:data}).slice(1);break;default:requestUrl+=url.format({query:data})}try{xhr.open(method,requestUrl,!0),xhr.responseType="text",xhr.setRequestHeader("Content-Type","application/x-www-form-urlencoded; charset=UTF-8"),xhr.setRequestHeader("If-None-Match",ETag),xhr.onreadystatechange=function(){if(this.readyState===this.DONE){if(this.status>=200&&this.status<300||0===this.status&&this.responseText){var response=this.responseText;response=response?JSON.parse(response):void 0,response&&(response.ETag=xhr.getResponseHeader("ETag")),resolve(response)}else 304===this.status?(console.warn(this.status,this.statusText),resolve(response)):reject(new Error(this.statusText));this.onreadystatechange=null,xhr=void 0}},xhr.send(payload)}catch(err){reject(err)}}var url=(this||self,$__require("a"));return module.exports={get:function(options,done,fail){options.method="GET",httpRequest(options,done,fail)},post:function(options,done,fail){options.method="POST",httpRequest(options,done,fail)},head:function(options,done,fail){options.method="HEAD",httpRequest(options,done,fail)}},module.exports}),$__System.registerDynamic("c",[],!0,function($__require,exports,module){"use strict";function ApiError(error){this.name="ApiError",this.message=error.message,this.code=error.code,this.field=error.field,this.value=error.value}this||self;return ApiError.prototype=Object.create(Error.prototype),ApiError.prototype.constructor=ApiError,ApiError.prototype.CODE={AUTH_CANCEL:401,FIELD_NOT_SPECIFIED:402,SEARCH_NOT_SPECIFIED:402,AUTH_EXPIRED:403,FIELD_NOT_FOUND:404,METHOD_NOT_FOUND:404,METHOD_DISABLED:405,FIELD_LIST_LIMIT_EXCEEDED:407,APPLICATION_IS_BLOCKED:407,INVALID_FIELD:407,INVALID_APPLICATION_ID:407,INVALID_IP_ADDRESS:407,REQUEST_LIMIT_EXCEEDED:407,NOT_ENOUGH_SEARCH_LENGTH:407,AUTH_ERROR:410,SOURCE_NOT_AVAILABLE:504},module.exports=ApiError,module.exports}),$__System.registerDynamic("3",[],!0,function($__require,exports,module){this||self;return module.exports={defaultRequestMethod:"get",requestProtocol:"https",defaultUpdateInterval:1e4},module.exports}),$__System.registerDynamic("d",[],!0,function($__require,exports,module){"use strict";this||self;return module.exports=function(){},module.exports}),$__System.registerDynamic("e",["b","c","3","d"],!0,function($__require,exports,module){"use strict";function Resource(optoins){optoins=optoins||{},optoins.deprecated&&console.warn(optoins.url+" resource is deprecated"),this.url=optoins.url,this.params=optoins.params,this.listeners=[],this.value=void 0,this.state=this.STATE.UNINTIALIZED,this.intervalId=-1,this.fetchInterval=optoins.interval}var http=(this||self,$__require("b")),ApiError=$__require("c"),config=$__require("3"),noop=$__require("d"),request="POST"===config.defaultRequestMethod.toUpperCase()?http.post:http.get;return Resource.prototype.STATE={UNINTIALIZED:0,FETCHING:1,READY:2,ERROR:3},Resource.prototype.startListening=function(){var resource=this;this.stopListening(),this.intervalId=setInterval(function(){resource.get()},this.fetchInterval)},Resource.prototype.stopListening=function(){clearInterval(this.intervalId)},Resource.prototype.set=function(newValue){var i=-1,listeners=this.listeners,oldValue=this.value;if(newValue=newValue||{},this.state=this.STATE.READY,this.value=newValue,(oldValue&&oldValue.ETag)!==newValue.ETag)for(;++i in listeners;)listeners[i](newValue);return this},Resource.prototype.get=function(callback,errorCallback){var resource=this;return callback=callback||noop,errorCallback=errorCallback||noop,resource.state=resource.STATE.FETCHING,request({url:this.url,params:this.params,ETag:this.value&&this.value.ETag},function(response){void 0===response&&(response=resource.value),"ok"===response.status?(resource.set(response),callback(response)):(resource.state=resource.STATE.ERROR,errorCallback(new ApiError(response.error)))},function(err){resource.state=resource.STATE.READY,errorCallback(err)}),this},Resource.prototype.subscribe=function(callback){var listeners=this.listeners;if("function"==typeof callback)switch(listeners.length||this.startListening(),listeners.push(callback),this.state){case this.STATE.UNINTIALIZED:this.get();break;case this.STATE.READY:this.get(callback);break;case this.STATE.ERROR:}return this},Resource.prototype.unsubscribe=function(callback){var listeners=this.listeners;if(void 0===callback)listeners.length=0;else for(index=listeners.indexOf(callback);~index;)listeners.splice(index,1),index=listeners.indexOf(callback);return listeners.length||this.stopListening(),this},module.exports=Resource,module.exports}),$__System.registerDynamic("5",["3","e"],!0,function($__require,exports,module){"use strict";function Endpoint(endpointConfig){endpointConfig=endpointConfig||{},endpointConfig.url=endpointConfig.url+"/",endpointConfig.interval=endpointConfig.interval||config.defaultUpdateInterval;var endpoint=function(params){var options=Object.assign({},endpointConfig,{params:params});return new Resource(options)};return endpoint.url=endpointConfig.url,endpoint}var config=(this||self,$__require("3")),Resource=$__require("e");return module.exports=Endpoint,module.exports}),$__System.registerDynamic("f",["3","4","5"],!0,function($__require,exports,module){"use strict";function WargamingNet(realm){var realmUrl=WargamingNet.realms[realm],apiUrl=protocol+"//"+realmUrl+"/wgn";if(!realmUrl)throw new ReferenceError('Requested realm "'+realm+'" is not supported for this API');Object.assign(this,{account:{players:new Endpoint({url:apiUrl+"/account/list"}),player:new Endpoint({url:apiUrl+"/account/info"})},wargag:{content:new Endpoint({url:apiUrl+"/wargag/content"}),search:new Endpoint({url:apiUrl+"/wargag/search"}),comments:new Endpoint({url:apiUrl+"/wargag/comments"}),categories:new Endpoint({url:apiUrl+"/wargag/categories"}),rate:new Endpoint({url:apiUrl+"/wargag/rate"}),createComment:new Endpoint({url:apiUrl+"/wargag/newcomment"}),deleteComment:new Endpoint({url:apiUrl+"/wargag/deletecomment"})},league:{list:new Endpoint({url:apiUrl+"/league/leagues"}),tournaments:new Endpoint({url:apiUrl+"/league/tournaments"}),grid:new Endpoint({url:apiUrl+"/league/grid"}),tournamentMatches:new Endpoint({url:apiUrl+"/league/matches"}),teams:new Endpoint({url:apiUrl+"/league/teams"}),teamInfo:new Endpoint({url:apiUrl+"/league/teaminfo"}),hallOfFame:new Endpoint({url:apiUrl+"/league/halloffame"}),players:new Endpoint({url:apiUrl+"/league/players"}),playerInfo:new Endpoint({url:apiUrl+"/league/playerinfo"})},clan:{list:new Endpoint({url:apiUrl+"/clans/list"}),info:new Endpoint({url:apiUrl+"/clans/info"}),playerInfo:new Endpoint({url:apiUrl+"/clans/membersinfo"}),glossary:new Endpoint({url:apiUrl+"/clans/glossary"}),messageboard:new Endpoint({url:apiUrl+"/clans/messageboard"})},wgTv:{tags:new Endpoint({url:apiUrl+"/wgtv/tags"}),videos:new Endpoint({url:apiUrl+"/wgtv/videos"}),vehicles:new Endpoint({url:apiUrl+"/wgtv/vehicles"})},server:{info:new Endpoint({url:apiUrl+"/servers/info"})}})}var protocol=(this||self,$__require("3"),$__require("4")),Endpoint=$__require("5");return WargamingNet.realms={ru:"api.worldoftanks.ru",eu:"api.worldoftanks.eu",na:"api.worldoftanks.com",kr:"api.worldoftanks.kr",asia:"api.worldoftanks.asia"},module.exports=WargamingNet,module.exports}),$__System.registerDynamic("1",["2","6","7","8","9","f"],!0,function($__require,exports,module){"use strict";var Wot=(this||self,$__require("2")),Wotb=$__require("6"),Wotx=$__require("7"),Wows=$__require("8"),Wowp=$__require("9"),Net=$__require("f");return module.exports={version:"1.9.0",revision:"april2016",WorldOfTanks:Wot,Wot:Wot,WorldOfTanksBlitz:Wotb,Wotb:Wotb,WorldOfTanksConsole:Wotx,Wotx:Wotx,WorldOfWarplanes:Wowp,Wowp:Wowp,WorldOfWarships:Wows,Wows:Wows,WargimingNet:Net,Net:Net},module.exports})})(function(factory){"function"==typeof define&&define.amd?define([],factory):"object"==typeof module&&module.exports&&"function"==typeof require?module.exports=factory():factory()});
//# sourceMappingURL=wg.min.js.map